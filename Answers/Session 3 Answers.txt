--unzip /hackoregon/crime_incident_data_2013.zip
--drop table crimedataraw
CREATE TABLE crimedataraw (
        ID serial,
        Record_ID INTEGER NOT NULL,
        Report_Date DATE NOT NULL,
        Report_Time TIME NOT NULL,
        Major_Offense_Type VARCHAR NOT NULL,
        Address VARCHAR,
        Neighborhood VARCHAR,
        Police_Precinct VARCHAR,
        Police_District VARCHAR,
        X_Coordinate FLOAT,
        Y_Coordinate FLOAT
);

COPY crimedataraw (Record_ID, Report_Date, Report_Time, Major_Offense_Type, Address, Neighborhood, Police_Precinct, Police_District, X_Coordinate, Y_Coordinate)
	FROM '/hackoregon/crime_incident_data.csv' WITH (FORMAT CSV, HEADER)

--1. Select 5 rows from a table.
SELECT *
FROM crimedataraw
LIMIT 5;


--2. Select date and neighborhood for 10 rows.
SELECT report_date, neighborhood
FROM crimedataraw
LIMIT 10;

--3. Select the hour of the day for 10 rows.
SELECT EXTRACT(hour from report_time), *
FROM crimedataraw
LIMIT 10;

--4. Select the second word of the neighborhood name.
SELECT neighborhood, SPLIT_PART(neighborhood, ' ', 2), (REGEXP_SPLIT_TO_ARRAY(neighborhood, '\s+'))[2], (REGEXP_MATCHES(neighborhood, '^\S+\s+(\S+)|'))[1]
FROM crimedataraw
LIMIT 10;

--5. Create a sentence describing what happened on each row for 100 rows (using a query).
SELECT FORMAT('If not for the brave police at district %s, it would have been a dark %s in %s on %s when a %s transpired.', Police_district, 
						CASE WHEN EXTRACT(hour FROM Report_Date) BETWEEN 5 AND 19 THEN 'day' ELSE 'night' END,
						INITCAP(neighborhood), TO_CHAR(Report_date, 'FMMonth Dth'), major_offense_type)
						,*
FROM crimedataraw
LIMIT 10


--6.a Select the first row inserted
SELECT *
FROM crimedataraw
WHERE ID = (SELECT MIN(ID) FROM crimedataraw)

--6.b Select the last row inserted
SELECT *
FROM crimedataraw
WHERE ID = (SELECT MAX(ID) FROM crimedataraw)

--7. Select the total crimes by neighborhood
SELECT neighborhood, count(*)
FROM crimedataraw
GROUP BY neighborhood
ORDER BY 2 DESC

--8. Select the min and max coordinates by neighborhood
SELECT neighborhood, MIN(x_coordinate), MAX(x_coordinate), MIN(y_coordinate), MAX(y_coordinate)
FROM crimedataRaw
GROUP BY neighborhood

--9. Which hour has the most crimes?
SELECT EXTRACT(HOUR FROM report_time)
FROM crimedataraw
GROUP BY EXTRACT(HOUR FROM report_time)
ORDER BY COUNT(*) DESC
LIMIT 1

--10. Which day of week?
SELECT TO_CHAR(report_date, 'FMDay')
FROM crimedataraw
GROUP BY TO_CHAR(report_date, 'FMDay')
ORDER BY COUNT(*) DESC
LIMIT 1

--11. Assuming that each neighborhood is square and lines up with the coordinate system, which neighborhood has the highest crime rate per square foot?  Do it with one query?
SELECT neighborhood, COUNT(*) / (MAX(x_coordinate) - MIN(x_coordinate)) * (MAX(y_coordinate) - MIN(y_coordinate))
FROM crimedataRaw
GROUP BY neighborhood
HAVING (MAX(x_coordinate) - MIN(x_coordinate)) * (MAX(y_coordinate) - MIN(y_coordinate)) > 0
ORDER BY 2 DESC

--12. Which neighborhood has the highest rate of each type of crime?

--option 1
SELECT neighborhood, major_offense_type
FROM	(SELECT neighborhood, major_offense_type, ROW_NUMBER() OVER (PARTITION BY major_offense_type ORDER BY occurences DESC) rank
	FROM (SELECT neighborhood, major_offense_type, COUNT(*) as occurences
		FROM crimedataraw
		GROUP BY neighborhood, major_offense_type
		) counts_of_crime_types_by_hood
	) ranks_of_crime_types_by_hood
WHERE rank = 1

--with CTEs
WITH counts_of_crime_types_by_hood AS
(
	SELECT neighborhood, major_offense_type, COUNT(*) as occurences
	FROM crimedataraw
	GROUP BY neighborhood, major_offense_type
), 
	ranks_of_crime_types_by_hood AS
(
	SELECT neighborhood, major_offense_type, ROW_NUMBER() OVER (PARTITION BY major_offense_type ORDER BY occurences DESC) rank
	FROM counts_of_crime_types_by_hood
) 

SELECT neighborhood, major_offense_type
FROM	ranks_of_crime_types_by_hood
WHERE rank = 1


--13. Which season has the highest rate of crime?
SELECT CASE TO_CHAR(report_date, 'Q') WHEN '1' THEN 'Winter' WHEN '2' THEN 'Spring' WHEN '3' THEN 'Summer' ELSE 'Fall' END as Season, COUNT(*)
FROM crimedataraw
GROUP BY CASE TO_CHAR(report_date, 'Q') WHEN '1' THEN 'Winter' WHEN '2' THEN 'Spring' WHEN '3' THEN 'Summer' ELSE 'Fall' END
ORDER BY 2 DESC
LIMIT 1